/*
   Copyright (c) 2024-present wander@rustpub.com
   hotbuild is licensed under Mulan PSL v2.
   You can use this software according to the terms and conditions of the Mulan PSL v2.
   You may obtain a copy of Mulan PSL v2 at:
            http://license.coscl.org.cn/MulanPSL2
   THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
   EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
   MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
   See the Mulan PSL v2 for more details.
 */

package alipay_sdk.test
import std.sort.sort
import alipay_sdk.newSigner
import std.unittest.*
import std.unittest.testmacro.*
const PRIVATE_KEY_FILE = #"MIIEogIBAAKCAQEAog0N+rHllTO+e42Bc5mpvowolWVStyurL3Ou/86uRMN8im7WG1v44h09IaZpw4k6dpYEj89d7aLd7IwnBR5Wg84Ox2LMR/Y/Pzo10hjlvJJOk+igqepSTtB/4UX0cG/9tWceHAWOFuD8uw/SSJegC91a0MmLUBUpd4wWnN1iOSi0442iNvNk79Z6xLKIs4LNJGCNddxcofvpdqq4/5ywxHo24m5zPQf6/ttGk5jQQVrF+y2ckdHKd2h7ZSOYI7nzlzbZqK0UOMDuTvRs696fPa5wSEshE0RQBcn5iCltNTPyLsL3RGUUlsLOPsyT6cFZtUAKJ+J6wEqQxM5TrvNHywIDAQABAoIBAGDTuhGccFipVVzP3ZSsMV+4sZsqsrTd8+hjkCIrZbeSsvyoY2hvmRPKcreDjtiWS4eF9e3T8wTF9yKbT8lgKkORQQVkBDnPalUmO/hwhf0Z0rfQHQfKCiorrO129iqk0AyvM698pj0HbBt9xaE4cBoGxnfQpVxReLiEzRInucP6lhE79v1BwXCwMtRVvFPPIFaLJ02JGIywN+jnkpLwJj8TAu5u3JawlRnsFJgQeTdsHs4G6E11WBeo7OZtKPiKWMcj1nPU0Dnr+6VG89Rx/cxqlMrlTJBhKsLEzcVQwcc3M3UnMOU3Of7Mj1olnUGJ90apVukDFM5OI4Mfqi9etekCgYEA9ViJqVUdzJwqTK/gmbAsRvri9+rmWhfoqBMGeUoHktOGR/hMKJ/LrVa1oBIcVVNdLbI7Ks0kySGCa6qm/4YP2DCihj0GKwnHdPQ94pd3lWvUFZimNKi5V/+sREU0dKSqK3b7F0njtpR6zn+x8KpktO7izL3o8740KpSb7xGb0BUCgYEAqRaLShbDYjhSfvIzWAbuPNpvvtDWUNip1cuJwzTvDthECV5ltkhLGVWVnStch6OeTbK+llLDVw+j/YT1KetQcZ60tw2spn8nq6UvC2IFa2h61zpa8VWeRDfhyEIzoBE8DFAyeWjqYHyHJlh0BzRA2P3ts2LwwwhRa6OHhYzQ0F8CgYAUUvpMab2nNoSWh7dOY/a3Bo+IxA/DBNoEGldd8tD/y8AC9EGy19HykQ1Irldkhhxg7bPTDt1uP/Vi3+cnob5sRVMhVarOI+g++wCpZazFVwJhq5yRHi0EaiymFymKRB3IrfmM61UOyewGcTOXYTYoeuWU2mKS1n3RzS/BtS64JQKBgB2husVAGftzfVmL3l2V0VhOu3iIJpbCcXjrE3hnJWHHmpy9sztvjeGhsvd5Kt0GWm6pXWcAmAUA069RBpnTCCTxOCBAQDppXC1jZEwtYF/DTou7SUazx2mTFXk/yMZLXueVglLuhOxlxlV8+NBuYtLkJSzjsOes5H/lh5Fq7QknAoGAJ/LzTBLPy3terUgqejSxB4pr6PMbNd8wEStHN1RmR2v9Msuto7PUT7OOjQYIJwQLnxQUDr65bB5uR35v+L/rC6XUkzJM18YWvmOhFM8OsIYc4HdDhSmeFpMXdbd6entMJEX0bWrTbS/UdEcqE30kwuNuEFQ07LopGY1gBEe1G8U="# // 沙箱环境自定义测试密钥
const PUBILC_KEY_FILE = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAog0N+rHllTO+e42Bc5mpvowolWVStyurL3Ou/86uRMN8im7WG1v44h09IaZpw4k6dpYEj89d7aLd7IwnBR5Wg84Ox2LMR/Y/Pzo10hjlvJJOk+igqepSTtB/4UX0cG/9tWceHAWOFuD8uw/SSJegC91a0MmLUBUpd4wWnN1iOSi0442iNvNk79Z6xLKIs4LNJGCNddxcofvpdqq4/5ywxHo24m5zPQf6/ttGk5jQQVrF+y2ckdHKd2h7ZSOYI7nzlzbZqK0UOMDuTvRs696fPa5wSEshE0RQBcn5iCltNTPyLsL3RGUUlsLOPsyT6cFZtUAKJ+J6wEqQxM5TrvNHywIDAQAB" // 沙箱环境自定义测试密钥
const SOURCE_URL = #"alipay_root_cert_sn=687b59193f3f462dd5336e5abf83c5d8_02941eef3187dddf3d3b83462e1dfcf6&app_cert_sn=1aca24501cc5cd3ac19089ff49d99d63&app_id=2021000117650139&biz_content={"buyer_id":"2088102175953034","out_trade_no":"1620630871769533001","subject":"iPhone","timestamp":"2021-05-08 17:09:04","total_amount":"88.88"}&charset=utf-8&format=JSON&method=alipay.trade.create&sign_type=RSA2&timestamp=2021-05-12 17:18:09&version=1.0"#

/* ===== Emitted by MacroCall @Test in sign_test.cj:22:1 ===== */
/* 22.1 */@Attribute[TEST_GENERATED] class TestCase_signTest <: TestClass {
/* 22.2 */    init() {
/* 22.3 */    }
/* 22.4 */    private func classConfiguration(): Configuration {
/* 22.5 */        let configuration = Configuration()
/* 22.6 */        configuration.set(KeyFromTopLevel.fromTopLevel, true)
/* 22.7 */        
/* 22.8 */        return configuration
/* 22.9 */    }
/* 22.10 */    public override func asTestSuite(): TestSuite {
/* 22.11 */        
/* 22.12 */        let suiteConfiguration = classConfiguration()
/* 22.13 */        let suiteBuilder = TestSuite.builder("TestCase_signTest").configure(suiteConfiguration)
/* 22.14 */        
/* 22.15 */        { => let caseConfig = Configuration()
/* 22.16 */            caseConfig.set(KeyFromTopLevel.fromTopLevel, true)
/* 22.17 */            
/* 22.18 */            let signTestTestFunc = { => signTest();() }
/* 22.19 */            suiteBuilder.add(
/* 22.20 */            UnitTestCase.create(
/* 22.21 */            "signTest",
/* 22.22 */            configuration: caseConfig,
/* 22.23 */            body: signTestTestFunc
/* 22.24 */            )
/* 22.25 */            )
/* 22.26 */            
/* 22.27 */        }()
/* 22.28 */        
/* 22.29 */        return suiteBuilder.build()
/* 22.30 */    }
/* 22.31 */    private func inheritedFromClassAnnotatedByTestTemplate < T >(): TestSuite where T <: TestClass {
/* 22.32 */        throw Exception("Unreachable code")
/* 22.33 */    }
/* 22.34 */}
/* 22.35 */public func signTest() {
/* 22.36 */    var s = newSigner("RSA2")
/* 22.37 */    s.setPrivateKey(PRIVATE_KEY_FILE)
/* 22.38 */    s.setPublicKey(PUBILC_KEY_FILE)
/* 22.39 */    var sourceSplit = SOURCE_URL.split("&", removeEmpty: true)
/* 22.40 */    sort(sourceSplit, stable: true)
/* 22.41 */    let sortSource = String.join(sourceSplit, delimiter: "&")
/* 22.42 */    
/* 22.43 */    let signature = s.sign(sortSource)
/* 22.44 */    let isPassed = s.verify(sortSource, signature)
/* 22.45 */    expectEqual("isPassed", "true", isPassed, true,)
/* 22.46 */}
/* 22.47 */
/* 22.48 */
/* 22.49 */interface TestPackageExtension_TestCase_signTest {
/* 22.50 */    func registerTestCase_signTest(): Unit
/* 22.51 */}
/* 22.52 */extend TestPackage <: TestPackageExtension_TestCase_signTest {
/* 22.53 */    @Attribute[TEST_REGISTER]
/* 22.54 */    public func registerTestCase_signTest() {
/* 22.55 */        registerSuite({ => TestCase_signTest().asTestSuite() })
/* 22.56 */    }
/* 22.57 */}
/* 22.58 */
/* ===== End of the Emit ===== */